You are given two binary strings, a and b. Your task is to compute their sum and return it as a binary string.

Example 1:
Input: a = "11", b = "1"
Output: "100"
Example 2:
Input: a = "1010", b = "1011"
Output: "10101"
Constraints:
The length of each binary string a and b is between 1 and 10,000 characters.
Both strings consist only of '0' and '1' characters.
Neither string contains leading zeros, except for the string "0" itself.
Explanation (30-50 words):
Given two binary strings a and b, add them together and return the result as a binary string. The strings represent binary numbers, and the task involves simulating binary addition, handling carry-over, and ensuring the result is in the correct binary format.



answer code:
class Solution:
    def addBinary(self, a, b):
        # Initialize the result as an empty string
        result = ""
        
        # Initialize the carry to 0
        carry = 0
        
        # Get the lengths of both strings
        i, j = len(a) - 1, len(b) - 1
        
        # Loop through both strings from the end to the beginning
        while i >= 0 or j >= 0 or carry:
            # Get the current digit of a, if present
            digit_a = int(a[i]) if i >= 0 else 0
            
            # Get the current digit of b, if present
            digit_b = int(b[j]) if j >= 0 else 0
            
            # Calculate the sum of the digits and the carry
            total = digit_a + digit_b + carry
            
            # Update the carry for the next iteration
            carry = total // 2
            
            # Append the current digit to the result (total % 2)
            result = str(total % 2) + result
            
            # Move to the next digits in a and b
            i -= 1
            j -= 1
        
        return result

