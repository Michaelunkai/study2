### 349. Intersection of Two Arrays

**Problem Description:**

Given two integer arrays `nums1` and `nums2`, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.

**Example 1:**
```
Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
```

**Example 2:**
```
Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.
```

**Constraints:**
- `1 <= nums1.length, nums2.length <= 1000`
- `0 <= nums1[i], nums2[i] <= 1000`

### Explanation (Like I'm 12):

Imagine you have two lists of favorite toys from two different friends. You want to find out which toys are liked by both friends. The toys that are common in both lists are the ones you are looking for.

### Solution:

To solve this problem, we can use a set to store the unique elements of the arrays and then find the intersection of these sets.

### Python Code:

```python
class Solution:
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:
        set1 = set(nums1)
        set2 = set(nums2)
        return list(set1 & set2)
```

### Explanation of the Solution:

1. **Convert Lists to Sets:**
   - Convert `nums1` to a set `set1` to get unique elements.
   - Convert `nums2` to a set `set2` to get unique elements.

2. **Find Intersection:**
   - Use the intersection operation `&` to find common elements between `set1` and `set2`.

3. **Convert Result to List:**
   - Convert the resulting set back to a list and return it.

### Example Walkthrough:

Let's take the example `nums1 = [1,2,2,1]` and `nums2 = [2,2]`:

- Convert `nums1` to a set: `set1 = {1, 2}`
- Convert `nums2` to a set: `set2 = {2}`
- Find the intersection: `set1 & set2 = {2}`
- Convert the set to a list: `[2]`

This approach ensures that the result contains only unique elements and is efficient in terms of time complexity.
