To solve the problem of ranking scores, you need to write an SQL query that ranks the scores in descending order, with ties receiving the same ranking. Here's the SQL query to achieve this:

```sql
SELECT 
    score,
    DENSE_RANK() OVER (ORDER BY score DESC) AS 'rank'
FROM 
    Scores;
```

### Explanation:
1. **DENSE_RANK()**: This function assigns ranks to rows within a partition of the result set with no gaps in ranking values.
2. **OVER (ORDER BY score DESC)**: This specifies the ordering of the rows. In this case, the rows are ordered by the `score` column in descending order.

### Example Usage:

Given the `Scores` table:
| id | score |
|----|-------|
| 1  | 3.5   |
| 2  | 3.65  |
| 3  | 4.0   |
| 4  | 3.85  |
| 5  | 3.65  |

#### The result will be:
| score | rank |
|-------|------|
| 4.0   | 1    |
| 3.85  | 2    |
| 3.65  | 3    |
| 3.65  | 3    |
| 3.5   | 5    |

In this result, scores are ranked in descending order, and tied scores receive the same rank.

Let me know if you need any further assistance or explanations!
