To implement `rand10()` using `rand7()`, you need to create a uniform random number generator for the range [1, 10]. Here's one way to achieve this by leveraging the properties of `rand7()`:

1. Use `rand7()` to generate two random numbers, forming a range [1, 49].
2. Map the results to the range [1, 10].
3. Discard results greater than 40 to avoid bias.

Here's the Python code:

```python
# The rand7() API is already defined for you.
# def rand7():
# @return a random integer in the range 1 to 7

class Solution:
    def rand10(self):
        """
        :rtype: int
        """
        while True:
            # Generate a number in the range [1, 49]
            num = (rand7() - 1) * 7 + rand7()
            # Map the number to the range [1, 10] and discard if it is greater than 40
            if num <= 40:
                return 1 + (num - 1) % 10
```

### Explanation:

1. **Generate a number in the range [1, 49]:** By calling `rand7()` twice, we generate a number in the range [1, 49]. This is done by `(rand7() - 1) * 7 + rand7()`. The first `rand7()` call produces a multiple of 7, and the second adds a number from 1 to 7.

2. **Map the number to the range [1, 10]:** If the generated number is within 1 to 40, we map it to 1 to 10 using `1 + (num - 1) % 10`. If the number is greater than 40, we discard it to maintain uniformity and rerun the loop.

This approach ensures that each number in the range 1 to 10 is equally likely to be chosen, as the probability of picking any number from 1 to 40 is the same.
