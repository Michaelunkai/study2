### 268. Missing Number

**Problem Description:**

Given an array `nums` containing `n` distinct numbers in the range `[0, n]`, return the only number in the range that is missing from the array.

**Example 1:**
```
Input: nums = [3,0,1]
Output: 2
Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.
```

**Example 2:**
```
Input: nums = [0,1]
Output: 2
Explanation: n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.
```

**Example 3:**
```
Input: nums = [9,6,4,2,3,5,7,0,1]
Output: 8
Explanation: n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.
```

**Constraints:**
- `n == nums.length`
- `1 <= n <= 10^4`
- `0 <= nums[i] <= n`
- All the numbers of `nums` are unique.

**Follow up:** Could you implement a solution using only `O(1)` extra space complexity and `O(n)` runtime complexity?

### Explanation (Like I'm 12):

Imagine you have a set of cards numbered from 0 to 9, but one card is missing. You are asked to find out which card is missing. 

One simple way to solve this is by using the sum of the numbers. If you know how much the sum of all the cards should be if none were missing, you can subtract the sum of the cards you have to find the missing card.

### Solution:

We can use the formula for the sum of the first `n` natural numbers, which is:

\[ \text{Sum} = \frac{n \times (n + 1)}{2} \]

Then, we subtract the sum of the numbers in the array from this sum to find the missing number.

### Python Code:

```python
class Solution:
    def missingNumber(self, nums: List[int]) -> int:
        n = len(nums)
        total_sum = n * (n + 1) // 2
        actual_sum = sum(nums)
        return total_sum - actual_sum
```

### Explanation of the Solution:

1. **Calculate Total Sum:**
   - Calculate the sum of the first `n` natural numbers using the formula \( \frac{n \times (n + 1)}{2} \).

2. **Calculate Actual Sum:**
   - Calculate the sum of all numbers in the array `nums`.

3. **Find the Missing Number:**
   - Subtract the actual sum from the total sum to find the missing number.

### Example Walkthrough:

Let's take the example `nums = [3,0,1]`:

- `n = 3`
- Total sum of numbers from 0 to 3: \( \frac{3 \times (3 + 1)}{2} = 6 \)
- Actual sum of numbers in `nums`: \( 3 + 0 + 1 = 4 \)
- Missing number: \( 6 - 4 = 2 \)

This approach is efficient with \( O(n) \) runtime and \( O(1) \) space complexity.
