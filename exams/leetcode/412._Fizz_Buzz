### 412. Fizz Buzz

**Solution:**

```python
class Solution:
    def fizzBuzz(self, n: int) -> List[str]:
        result = []
        for i in range(1, n + 1):
            if i % 3 == 0 and i % 5 == 0:
                result.append("FizzBuzz")
            elif i % 3 == 0:
                result.append("Fizz")
            elif i % 5 == 0:
                result.append("Buzz")
            else:
                result.append(str(i))
        return result
```

### Explanation:

1. **Initialize Result List:**
   - Create an empty list `result` to store the output strings.

2. **Iterate from 1 to n:**
   - Use a for loop to iterate from 1 to `n` inclusive.

3. **Check Divisibility:**
   - For each integer `i` in the loop:
     - If `i` is divisible by both 3 and 5 (i.e., `i % 3 == 0 and i % 5 == 0`), append `"FizzBuzz"` to `result`.
     - If `i` is divisible by 3 only (i.e., `i % 3 == 0`), append `"Fizz"` to `result`.
     - If `i` is divisible by 5 only (i.e., `i % 5 == 0`), append `"Buzz"` to `result`.
     - If `i` is not divisible by either 3 or 5, append the string representation of `i` to `result`.

4. **Return the Result List:**
   - After the loop completes, return the `result` list containing all the FizzBuzz outputs.

### Example Walkthrough:

1. **Example 1:**
   - Input: `n = 3`
   - Output: `["1", "2", "Fizz"]`
   - Explanation:
     - 1 is not divisible by 3 or 5, so "1".
     - 2 is not divisible by 3 or 5, so "2".
     - 3 is divisible by 3, so "Fizz".

2. **Example 2:**
   - Input: `n = 5`
   - Output: `["1", "2", "Fizz", "4", "Buzz"]`
   - Explanation:
     - 1 is not divisible by 3 or 5, so "1".
     - 2 is not divisible by 3 or 5, so "2".
     - 3 is divisible by 3, so "Fizz".
     - 4 is not divisible by 3 or 5, so "4".
     - 5 is divisible by 5, so "Buzz".

3. **Example 3:**
   - Input: `n = 15`
   - Output: `["1", "2", "Fizz", "4", "Buzz", "Fizz", "7", "8", "Fizz", "Buzz", "11", "Fizz", "13", "14", "FizzBuzz"]`
   - Explanation:
     - 1 is not divisible by 3 or 5, so "1".
     - 2 is not divisible by 3 or 5, so "2".
     - 3 is divisible by 3, so "Fizz".
     - 4 is not divisible by 3 or 5, so "4".
     - 5 is divisible by 5, so "Buzz".
     - 6 is divisible by 3, so "Fizz".
     - 7 is not divisible by 3 or 5, so "7".
     - 8 is not divisible by 3 or 5, so "8".
     - 9 is divisible by 3, so "Fizz".
     - 10 is divisible by 5, so "Buzz".
     - 11 is not divisible by 3 or 5, so "11".
     - 12 is divisible by 3, so "Fizz".
     - 13 is not divisible by 3 or 5, so "13".
     - 14 is not divisible by 3 or 5, so "14".
     - 15 is divisible by both 3 and 5, so "FizzBuzz".

This solution iterates through the numbers from 1 to `n`, checking each number for divisibility by 3 and 5 and appending the appropriate string to the result list. It ensures that the output follows the FizzBuzz rules accurately.
