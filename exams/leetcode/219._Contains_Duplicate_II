0~### 219. Contains Duplicate II

**Problem Description:**

Given an integer array `nums` and an integer `k`, return `true` if there are two distinct indices `i` and `j` in the array such that `nums[i] == nums[j]` and `abs(i - j) <= k`.

**Example 1:**
```
Input: nums = [1,2,3,1], k = 3
Output: true
```

**Example 2:**
```
Input: nums = [1,0,1,1], k = 1
Output: true
```

**Example 3:**
```
Input: nums = [1,2,3,1,2,3], k = 2
Output: false
```

**Constraints:**
- `1 <= nums.length <= 10^5`
- `-10^9 <= nums[i] <= 10^9`
- `0 <= k <= 10^5`

### Explanation (Like I'm 12):

Imagine you have a list of marbles, and each marble has a number on it. You want to know if there are any marbles with the same number that are close to each other, within a certain distance `k`.

### Python Solution:

Here's how you can do it:

```python
class Solution:
    def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool:
        num_dict = {}
        
        for i, num in enumerate(nums):
            if num in num_dict and i - num_dict[num] <= k:
                return True
            num_dict[num] = i
            
        return False
```

### Explanation of the Solution:

1. **Initialize a Dictionary:**
    - Create an empty dictionary called `num_dict`. This will help us keep track of the positions of the marbles.

2. **Iterate Through the List:**
    - Go through each marble in the list along with its position.

3. **Check for Nearby Duplicates:**
    - For each marble, check if it's already in the dictionary.
    - If it is, check if the current position minus the stored position is less than or equal to `k`.
    - If this condition is met, return `True` because we have found two marbles with the same number close to each other.

4. **Update the Dictionary:**
    - If the marble is not in the dictionary or if the condition is not met, update the dictionary with the current position of the marble.

5. **Return False if No Nearby Duplicates Found:**
    - If you go through all the marbles and don't find any that meet the condition, return `False`.

In simpler terms, imagine you have a list of marbles, and you want to check if there are any marbles with the same number that are within a certain distance from each other. We use a dictionary to keep track of the positions of each marble and check if the distance between any two marbles with the same number is within the allowed distance `k`.1~
