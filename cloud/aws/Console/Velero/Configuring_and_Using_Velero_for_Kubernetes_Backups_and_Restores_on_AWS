# Tutorial: Configuring and Using Velero for Kubernetes Backups and Restores on AWS

## Step 1: Install Velero CLI

First, you need to install the Velero CLI on your local machine.

1. **Download the latest Velero release:**
      
    wget https://github.com/vmware-tanzu/velero/releases/download/v1.10.1/velero-v1.10.1-linux-amd64.tar.gz

2. **Extract the Velero tarball:**
      
    tar -xvf velero-v1.10.1-linux-amd64.tar.gz

3. **Move the Velero binary to `/usr/local/bin`:**
      
    sudo mv velero-v1.10.1-linux-amd64/velero /usr/local/bin/

4. **Verify the installation:**
      
    velero version

## Step 2: Set Up S3-Compatible Storage using AWS CLI

Velero requires an object storage provider to store backups. We will use AWS S3 as an example. You need an S3 bucket and an IAM user with sufficient permissions.

1. **Install AWS CLI (if not already installed):**
      
    sudo apt update
    sudo apt install awscli -y

2. **Configure AWS CLI with your credentials:**
      
    aws configure
    Provide the following when prompted:
    - AWS Access Key ID
    - AWS Secret Access Key
    - Default region name

3. **Create an S3 bucket:**
      
    aws s3api create-bucket --bucket <YOUR_BUCKET_NAME> --region <YOUR_AWS_REGION> --create-bucket-configuration LocationConstraint=<YOUR_AWS_REGION>

4. **Create an IAM user with S3 access:**
      
    aws iam create-user --user-name velero

5. **Attach the necessary policies to the IAM user:**
      
    aws iam attach-user-policy --user-name velero --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess

6. **Create access keys for the IAM user:**
      
    aws iam create-access-key --user-name velero
    Save the `AccessKeyId` and `SecretAccessKey` from the output.

## Step 3: Install Velero Server

Next, you need to install the Velero server in your Kubernetes cluster.

1. **Create a `credentials-velero` file:**
      
    cat <<EOF > credentials-velero
    [default]
    aws_access_key_id=<YOUR_AWS_ACCESS_KEY_ID>
    aws_secret_access_key=<YOUR_AWS_SECRET_ACCESS_KEY>
    EOF

2. **Install Velero server in the Kubernetes cluster:**
      
    velero install \
        --provider aws \
        --plugins velero/velero-plugin-for-aws:v1.3.0 \
        --bucket <YOUR_BUCKET_NAME> \
        --secret-file ./credentials-velero \
        --backup-location-config region=<YOUR_AWS_REGION>,s3ForcePathStyle="true",s3Url=https://s3.<YOUR_AWS_REGION>.amazonaws.com \
        --snap ot-location-config region=<YOUR_AWS_REGION>

## Step 4: Verify Velero Installation

Check if Velero has been successfully installed and is running.

1. **Check Velero pods:**
      
    kubectl get pods -n velero

2. **Check Velero backup locations:**
      
    velero backup-location get

## Step 5: Create a Backup

To create a backup of your Kubernetes resources:

1. **Create a backup:**
      
    velero backup create my-backup --include-namespaces default

2. **Check backup status:**
      
    velero backup get

## Step 6: Restore from Backup

To restore your Kubernetes resources from a backup:

1. **List available backups:**
      
    velero backup get

2. **Restore a specific backup:**
      
    velero restore create --from-backup my-backup

3. **Check restore status:**
      
    velero restore get

## Step 7: Schedule Regular Backups

To schedule regular backups using Velero:

1. **Create a schedule:**
      
    velero schedule create daily-backup --schedule "0 2 * * *" --include-namespaces default

2. **Check scheduled backups:**
      
    velero schedule get

By following these steps, you will have Velero set up and running on your Kubernetes cluster, ensuring that your cluster's data is backed up regularly and can be restored when needed.
