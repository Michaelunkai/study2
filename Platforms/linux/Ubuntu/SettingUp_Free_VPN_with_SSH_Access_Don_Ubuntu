Setting Up a Free VPN with SSH Access on UbuntuComprehensive Guide to Setting Up a Free VPN with SSH Access on Ubuntu
Step 1: Enable SSH on Your Server (Server)
Install SSH Server:

 
 
sudo apt update
sudo apt install openssh-server -y
Start and Enable SSH Service:

 
 
sudo systemctl start ssh
sudo systemctl enable ssh
Check SSH Status:

 
 
sudo systemctl status ssh
Step 2: Install OpenVPN and Easy-RSA (Server)
Install OpenVPN and Easy-RSA:
 
 
sudo apt update
sudo apt install openvpn easy-rsa -y
Step 3: Set Up the Certificate Authority (Server)
Create a Directory for Easy-RSA:

 
 
make-cadir ~/openvpn-ca
cd ~/openvpn-ca
Edit the vars File:

 
 
nano vars
Modify the following lines according to your preference:

 
 
set_var EASYRSA_REQ_COUNTRY    "US"
set_var EASYRSA_REQ_PROVINCE   "California"
set_var EASYRSA_REQ_CITY       "San Francisco"
set_var EASYRSA_REQ_ORG        "MyOrganization"
set_var EASYRSA_REQ_EMAIL      "email@example.com"
set_var EASYRSA_REQ_OU         "MyOrganizationalUnit"
Build the CA:

 
 
./easyrsa init-pki
./easyrsa build-ca nopass
Step 4: Create the Server Certificate and Key (Server)
Generate the Server Certificate and Key:

 
 
./easyrsa gen-req server nopass
./easyrsa sign-req server server
Generate Diffie-Hellman Parameters:

 
 
./easyrsa gen-dh
Generate a Shared Secret for Extra Security:

 
 
openvpn --genkey secret pki/ta.key
Step 5: Configure the OpenVPN Server (Server)
Copy the Necessary Files to the OpenVPN Directory:

 
 
sudo cp pki/ca.crt pki/issued/server.crt pki/private/server.key pki/dh.pem pki/ta.key /etc/openvpn
Create and Edit the OpenVPN Server Configuration File:

 
 
sudo nano /etc/openvpn/server.conf
Add the following configuration:

conf
 
port 1194
proto udp
dev tun
ca ca.crt
cert server.crt
key server.key
dh dh.pem
auth SHA256
tls-auth ta.key 0
topology subnet
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
cipher AES-256-CBC
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
verb 3
Step 6: Enable IP Forwarding and Configure Firewall (Server)
Enable IP Forwarding:

 
 
sudo nano /etc/sysctl.conf
Uncomment the following line:

conf
 
net.ipv4.ip_forward=1
Apply the change:

 
 
sudo sysctl -p
Configure the Firewall:

 
 
sudo ufw allow 1194/udp
sudo ufw allow OpenSSH
sudo ufw enable
sudo ufw status
Add a Firewall Rule to Allow Traffic from the VPN to Your Local Network:

 
 
sudo iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE
sudo iptables-save | sudo tee /etc/iptables/rules.v4
Step 7: Start and Enable the OpenVPN Service (Server)
Start the OpenVPN Service:

 
 
sudo systemctl start openvpn@server
Enable the OpenVPN Service to Start on Boot:

 
 
sudo systemctl enable openvpn@server
Step 8: Set Up Client Configuration (Server)
Create a Client Certificate and Key:

 
 
cd ~/openvpn-ca
./easyrsa gen-req client1 nopass
./easyrsa sign-req client client1
Transfer the Necessary Files to the Client Machine:

 
 
scp ~/openvpn-ca/pki/ca.crt user@client_machine_ip:/home/user/
scp ~/openvpn-ca/pki/issued/client1.crt user@client_machine_ip:/home/user/
scp ~/openvpn-ca/pki/private/client1.key user@client_machine_ip:/home/user/
scp /etc/openvpn/ta.key user@client_machine_ip:/home/user/
Create a Client Configuration File on the Client Machine:

On the client machine:

 
 
nano ~/client1.ovpn
Add the following configuration, replacing placeholders with the actual file contents:

conf
 
client
dev tun
proto udp
remote your_server_ip 1194
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
auth SHA256
cipher AES-256-CBC
verb 3
key-direction 1

<ca>
-----BEGIN CERTIFICATE-----
# Paste the contents of ca.crt here
-----END CERTIFICATE-----
</ca>

<cert>
-----BEGIN CERTIFICATE-----
# Paste the contents of client1.crt here
-----END CERTIFICATE-----
</cert>

<key>
-----BEGIN PRIVATE KEY-----
# Paste the contents of client1.key here
-----END PRIVATE KEY-----
</key>

<tls-auth>
-----BEGIN OpenVPN Static key V1-----
# Paste the contents of ta.key here
-----END OpenVPN Static key V1-----
</tls-auth>
Step 9: Configure SSH to Allow Connections from the VPN (Server)
Edit the SSH Configuration File:

 
 
sudo nano /etc/s /s d_config
Ensure the Following Line is Present and Uncommented:

conf
 
PermitRootLogin yes
Restart the SSH Service:

 
 
sudo systemctl restart ssh
Step 10: Connect to Your VPN and SSH from Any Network (Client)
Install OpenVPN Client:
On the client machine, install the OpenVPN client:

 
 
sudo apt update
sudo apt install openvpn -y
Connect to the VPN:
Use the OpenVPN client to connect to the VPN using the configuration file:

 
 
sudo openvpn --config ~/client1.ovpn
Test SSH Connection:
Once connected to the VPN, you can SSH into your server from any network. Use the following command to SSH into your server:

 
 
s  your_server_username@10.8.0.1
Replace your_server_username with your actual server username. The IP 10.8.0.1 is the default VPN server IP address as configured in the server configuration file.

Now you should be able to connect to your VPN and access your server via SSH from any network. Ensure the certificate and key contents are correctly copied without extra spaces or missing lines.
