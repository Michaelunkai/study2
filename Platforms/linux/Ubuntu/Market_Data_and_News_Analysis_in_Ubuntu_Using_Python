# Comprehensive Guide to Market Data and News Analysis in Ubuntu Using Python

## Introduction
This guide will walk you through the steps of setting up a Python environment on Ubuntu for market data and news analysis. We will cover:
1. Installing necessary tools and libraries.
2. Fetching market data using APIs.
3. Performing basic data analysis.
4. Fetching and analyzing news articles related to market data.

## Step 1: Set Up Your Python Environment

Open your terminal and follow these steps:

### Update and Upgrade Your System
  
sudo apt update && sudo apt upgrade -y

### Install Python and Pip
  
sudo apt install python3 python3-pip -y

### Install Virtualenv
  
sudo pip3 install virtualenv

### Create a Virtual Environment
  
mkdir ~/market_analysis
cd ~/market_analysis
virtualenv venv
source venv/bin/activate

## Step 2: Install Required Python Libraries

### Install Libraries
  
pip install pandas numpy matplotlib seaborn requests beautifulsoup4 lxml newspaper3k wordcloud lxml[html_clean]

## Step 3: Fetch Market Data Using APIs

### Example: Using Alpha Vantage API

#### Get Your API Key
Use the API key provided: `34SKU2TLRI820JVL`

#### Fetch Stock Data

  
nano fetch_market_data.py

Paste the following code into `fetch_market_data.py`:

  
import requests
import pandas as pd

API_KEY = '<here>'
symbol = 'AAPL'
function = 'TIME_SERIES_DAILY'
url = f'https://www.alphavantage.co/query?function={function}&symbol={symbol}&apikey={API_KEY}'

response = requests.get(url)
data = response.json()

# Convert to DataFrame
df = pd.DataFrame.from_dict(data['Time Series (Daily)'], orient='index')
df = df.astype(float)
df.index = pd.to_datetime(df.index)

# Save to CSV
df.to_ ('AAPL_daily. ')

### Run the Script
  
  fetch_market_data.py

## Step 4: Perform Basic Data Analysis

  
nano analyze_market_data.py

Paste the following code into `analyze_market_data.py`:

  
import pandas as pd
import matplotlib.pyplot as plt

# Load Data
df = pd.read_csv('AAPL_daily.csv', index_col=0, parse_dates=True)

# Plot Closing Price
plt.figure(figsize=(12, 6))
plt.plot(df.index, df['4. close'], label='Closing Price')
plt.title('AAPL Closing Price')
plt.xlabel('Date')
plt.ylabel('Price')
plt.legend()
plt. ow()

### Run the Script
  
  analyze_market_data.py

## Step 5: Fetch and Analyze News Articles

### Fetch News Articles

  
nano fetch_news_articles.py

Paste the following code into `fetch_news_articles.py`:

  
from newspaper import Article
import pandas as pd

# List of news URLs
urls = [
    'https://www.cnbc.com/2023/08/05/tech-stocks-lead-market-rebound.html',
    'https://www.bbc.com/news/business-57934512'
]

articles = []

for url in urls:
    try:
        article = Article(url)
        article.download()
        article.parse()
        article.nlp()
        
        articles.append({
            'title': article.title,
            'authors': article.authors,
            'publi _date': article.publi _date,
            'summary': article.summary,
            'text': article.text,
            'url': url
        })
    except Exception as e:
        print(f"Failed to process {url}: {e}")

# Convert to DataFrame
df = pd.DataFrame(articles)

# Save to CSV
df.to_ ('news_articles. ', index=False)

### Run the Script
  
  fetch_news_articles.py

### Verify the CSV File
Check if `news_articles.csv` has been created in the directory.

  
ls -l news_articles. 

### Analyze News Articles

  
nano analyze_news_articles.py

Paste the following code into `analyze_news_articles.py`:

  
import pandas as pd
from wordcloud import WordCloud
import matplotlib.pyplot as plt

# Load Data
try:
    df = pd.read_ ('news_articles. ')

    # Combine all summaries
    text = ' '.join(df['summary'].dropna())

    # Generate Word Cloud
    wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)

    # Plot Word Cloud
    plt.figure(figsize=(10, 5))
    plt.im ow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt. ow()
except FileNotFoundError:
    print("The file 'news_articles.csv' was not found. Please make sure to run 'fetch_news_articles.py' first.")

### Run the Script
  
  analyze_news_articles.py

## Conclusion
You've now set up a comprehensive environment for market data and news analysis in Ubuntu using Python. This guide covered fetching market data, performing basic data analysis, fetching news articles, and analyzing the content of those articles.

Feel free to expand upon this by incorporating more advanced data analysis techniques and integrating other data sources.
