Create a New Database:

Copy code
createdb your_database_name
Connect to the Newly Created Database:

Copy code
psql -d your_database_name
Create a Table in the Database:

sql
Copy code
CREATE TABLE your_table (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    hire_date DATE,
    salary NUMERIC(10, 2)
);
Check Table Existence:

sql
Copy code
\dt your_table
This command checks if the table "your_table" exists in the current database. If it exists, you'll see its details; otherwise, you'll get an empty result set.

If the Table Exists, Proceed to Analyze Query Plan:

Use EXPLAIN command without a condition:
sql
Copy code
EXPLAIN SELECT * FROM your_table;
Use EXPLAIN ANALYZE without a condition:
sql
Copy code
EXPLAIN ANALYZE SELECT * FROM your_table;
Enable Query Logging:

Find the PostgreSQL configuration file:
bash
Copy code
sudo nano /etc/postgresql/<version>/main/postgresql.conf
Uncomment or add the line:
arduino
Copy code
log_statement = 'all'
Save the changes and restart PostgreSQL:
Copy code
sudo service postgresql restart
Monitor Resource Consumption Metrics:

Use \watch command in psql:
sql
Copy code
\watch 5 SELECT * FROM pg_stat_activity;
Analyze Locks and Blocking Queries:

Execute the query:
sql
Copy code
SELECT * FROM pg_locks;
Review Performance Over Time:

Check PostgreSQL logs:
bash
Copy code
tail -f /var/log/postgresql/postgresql-<version>-main.log
Optimize and Tune Queries:

Based on insights, optimize SQL queries, modify indexes, and tune configuration parameters as needed.
This comprehensive guide should assist you in effectively monitoring and optimizing your PostgreSQL database performance. Let me know if you have any questions or need further assistance!
