Step 1: Install Docker and Docker Compose
First, ensure Docker and Docker Compose are installed on your Ubuntu system.

Update the package list and install prerequisites:

 
 
sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
Add Docker’s official GPG key:

 
 
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
Add the Docker repository:

 
 
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
Install Docker:

 
 
sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io
Install Docker Compose:

 
 
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
Verify installation:

 
 
docker --version
docker-compose --version
Step 2: Set Up the Docker Mail Server
Create a directory for your mail server:

 
 
mkdir -p ~/docker-mailserver
cd ~/docker-mailserver
Create the docker-compose.yml file:

 
 
nano docker-compose.yml
Paste the following configuration into the file:

 
 
version: '3.8'

services:
  mailserver:
    image: docker.io/mailserver/docker-mailserver:latest
    container_name: mailserver
    hostname: mail
    domainname: example.com  # Replace with your domain
    env_file: mailserver.env
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "993:993"
    volumes:
      - maildata:/var/mail
      - mailstate:/var/mail-state
      - maillogs:/var/log/mail
      - ./config/:/tmp/docker-mailserver/
    environment:
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - ENABLE_POSTGREY=1
      - ONE_DIR=1
      - DMS_DEBUG=0
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE
    restart: always

volumes:
  maildata:
  mailstate:
  maillogs:
Create the environment file:

 
 
nano mailserver.env
Add the following content:

env
 
# Environment settings for your mailserver
ENABLE_SPAMASSASSIN=1
ENABLE_CLAMAV=1
ENABLE_FAIL2BAN=1
ENABLE_POSTGREY=1
ONE_DIR=1
DMS_DEBUG=0
Create the configuration directory and initial configuration:

 
 
mkdir config
docker run --rm -v "$(pwd)/config":/tmp/docker-mailserver -ti docker.io/mailserver/docker-mailserver:latest setup config
Step 3: Start the Mail Server
Start the mail server using Docker Compose:

 
 
docker-compose up -d
Check the status of the containers:

 
 
docker-compose ps
Step 4: Configure Email Accounts
Add an email account:

 
 
docker exec -it mailserver setup email add user@example.com password
Add other configurations as needed (aliases, etc.):

 
 
docker exec -it mailserver setup alias add alias@example.com target@example.com
Step 5: Access and Test Your Mail Server
Ensure your domain’s DNS records are correctly set up to point to your mail server. This includes MX records, A records, and SPF records.

Use a mail client to connect to your mail server using the created email accounts.

Check logs if there are any issues:

 
 
docker-compose logs -f mailserver
Step 6: Enable SSL (Optional)
To secure your mail server with SSL, you can use Let's Encrypt or another certificate provider.

Create a directory for SSL certificates:

 
 
mkdir -p ~/docker-mailserver/config/ssl
Obtain and place your SSL certificates in the config/ssl directory.

Modify the docker-compose.yml file to include the SSL certificates:

 
 
services:
  mailserver:
    volumes:
      - ./config/:/tmp/docker-mailserver/
      - ./config/ssl:/etc/letsencrypt/live
    environment:
      - SSL_TYPE=manual
Restart the mail server:

 
 
docker-compose down
docker-compose up -d
