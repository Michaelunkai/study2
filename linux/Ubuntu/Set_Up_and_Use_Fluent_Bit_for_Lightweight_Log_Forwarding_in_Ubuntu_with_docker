Step 1: Install DockerFirst, ensure that Docker is installed on your Ubuntu system. If Docker is not installed, follow these steps:Update the package list:sudo apt-get updateInstall required packages:sudo apt-get install apt-transport-https ca-certificates curl software-properties-commonAdd Docker’s official GPG key:curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -Add the Docker repository:sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"Update the package list again:sudo apt-get updateInstall Docker:sudo apt-get install docker-ceVerify Docker installation:sudo docker --versionStep 2: Run Fluent Bit in DockerPull the Fluent Bit Docker image:sudo docker pull fluent/fluent-bit:latestCreate a configuration file for Fluent Bit: Fluent Bit uses configuration files to define inputs, filters, and outputs. Create a configuration file named fluent-bit.conf:nano fluent-bit.confExample configuration:[SERVICE]
    Flu         5
    Daemon       Off
    Log_Level    info
    Parsers_File parsers.conf

[INPUT]
    Name         tail
    Path         /var/log/*.log
    Parser       docker
    Tag          host.*

[OUTPUT]
    Name         stdout
    Match        *Create a parsers file if needed: If you are using a parser (like the docker parser mentioned in the configuration above), you need to create a parsers.conf file:nano parsers.confExample parsers.conf:[PARSER]
    Name        docker
    Format      json
    Time_Key    time
    Time_Format %Y-%m-%dT%H:%M:%S.%LRun Fluent Bit container with the configuration:sudo docker run -d -v $(pwd)/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf -v $(pwd)/parsers.conf:/fluent-bit/etc/parsers.conf -v /var/log:/var/log fluent/fluent-bit:latestExplanation:-d: Run the container in detached mode.-v $(pwd)/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf: Mount the configuration file.-v $(pwd)/parsers.conf:/fluent-bit/etc/parsers.conf: Mount the parsers file.-v /var/log:/var/log: Mount the /var/log directory from the host to the container.Step 3: Verify Fluent Bit is RunningCheck running containers:sudo docker psYou should see the Fluent Bit container running.View logs to ensure it’s working:sudo docker logs <container_id>Replace <container_id> with the actual container ID of the Fluent Bit container.Step 4: Test Log ForwardingTo ensure that Fluent Bit is correctly forwarding logs, you can generate some log entries and check the Fluent Bit output.Generate a test log entry:echo "Test log entry" | sudo tee -a /var/log/test.logCheck the Fluent Bit container logs again:sudo docker logs <container_id>You should see the "Test log entry" in the container logs, indicating that Fluent Bit is successfully forwarding logs.ConclusionYou have now set up and run Fluent Bit for lightweight log forwarding using Docker on an Ubuntu system. You can customize the configuration files further to suit your specific log forwarding needs.
