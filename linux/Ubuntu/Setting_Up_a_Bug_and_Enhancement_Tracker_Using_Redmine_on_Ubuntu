# Comprehensive Guide to Setting Up a Bug and Enhancement Tracker Using Redmine on Ubuntu

### Step 1: Update Your System
Before starting, ensure your system is up-to-date by running the following commands:
  
sudo apt update
sudo apt upgrade -y

### Step 2: Install Dependencies
Redmine requires several dependencies, including a web server, a database server, and Ruby. Install these with the following commands:
  
sudo apt install -y mariadb-server mariadb-client libmariadb-dev

### Step 3: Install Ruby and Redmine
Use the following command to install Ruby, Redmine, and other required packages:
  
sudo apt update && sudo apt install -y ruby-full build-essential zlib1g-dev apache2 libapache2-mod-passenger libmysqlclient-dev && sudo gem install bundler && cd /var/www && sudo wget https://www.redmine.org/releases/redmine-5.0.0.tar.gz && sudo tar -xvf redmine-5.0.0.tar.gz && sudo mv redmine-5.0.0 redmine && cd redmine && sudo cp config/database.yml.example config/database.yml && sudo sed -i 's/~> 2.3/~> 2.3.0/' Gemfile && sudo bundle config set without 'development test' && sudo bundle install && sudo ln -s /var/www/redmine/public /var/www/html/redmine && sudo systemctl restart apache2

### Step 4: Configure Database
Start the MariaDB server and create a database for Redmine:
  
sudo systemctl start mariadb
sudo my _secure_installation
Log into the MariaDB shell and create the Redmine database and user:
  
sudo mysql -u root -p
In the MariaDB shell, run the following commands:
  
CREATE DATABASE redmine CHARACTER SET utf8mb4;
CREATE USER 'redmine'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON redmine.* TO 'redmine'@'localhost';
FLUSH PRIVILEGES;
EXIT;

### Step 5: Configure Redmine Database Settings
Edit the database configuration file to include your database settings:
  
sudo nano /var/www/redmine/config/database.yml
Modify the file to include your database settings:
  
production:
  adapter: my 2
  database: redmine
  host: localhost
  username: redmine
  password: "password"
  encoding: utf8mb4

### Step 6: Install Bundler and Redmine Dependencies
Navigate to the Redmine directory and install Bundler and the necessary gems:
  
cd /var/www/redmine
sudo bundle install --without development test

### Step 7: Generate Secret Token and Migrate the Database
Generate the secret token and migrate the database:
  
sudo bundle exec rake generate_secret_token
RAILS_ENV=production sudo bundle exec rake db:migrate
RAILS_ENV=production sudo bundle exec rake redmine:load_default_data

### Step 8: Configure Apache
Create a new Apache configuration file for Redmine:
  
sudo nano /etc/apache2/sites-available/redmine.conf
Add the following configuration:
 apache
<VirtualHost *:80>
    ServerAdmin admin@example.com
    DocumentRoot /var/www/redmine/public
    ServerName example.com

    <Directory /var/www/redmine/public>
        Require all granted
        Options -MultiViews
    </Directory>

    ErrorLog ${APACHE_LOG_DIR}/redmine_error.log
    CustomLog ${APACHE_LOG_DIR}/redmine_access.log combined
</VirtualHost>

### Step 9: Enable the Site and Restart Apache
Enable the Redmine site and the Passenger module, then restart Apache:
  
sudo a2ensite redmine
sudo a2enmod passenger
sudo systemctl restart apache2

### Step 10: Access Redmine
Open your web browser and navigate to `http://your_server_ip_or_domain/redmine`. You should see the Redmine login page.

### Step 11: Initial Setup
The default login credentials are:
- Username: `admin`
- Password: `admin`

Log in and change the password, then configure your Redmine instance according to your needs.

### Additional Configuration
To improve security and functionality, you may want to configure SSL, set up email notifications, and customize the Redmine installation further. Refer to the Redmine documentation for detailed instructions on these topics.

This comprehensive guide should get you up and running with a basic Redmine installation on Ubuntu. If you encounter any issues or need further customization, feel free to ask!
