Using TensorFlow with GPU Support
Install NVIDIA Drivers and CUDA:

sudo apt-get update
sudo apt-get install -y build-essential dkms
sudo apt-get install -y nvidia-driver-460
sudo reboot
sudo apt-get install -y nvidia-cuda-toolkit


Install TensorFlow-GPU:
pip3 install tensorflow-gpu

Training a Model with GPU:

import tensorflow as tf

physical_devices = tf.config.experimental.list_physical_devices('GPU')
if len(physical_devices) > 0:
    tf.config.experimental.set_memory_growth(physical_devices[0], True)

(train_images, train_labels), (test_images, test_labels) = tf.keras.datasets.mnist.load_data()
train_images = train_images / 255.0
test_images = test_images / 255.0

model = tf.keras.models.Sequential([
    tf.keras.layers.Flatten(input_ ape=(28, 28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=5)
test_loss, test_acc = model.evaluate(test_images, test_labels)
print(f'Test accuracy: {test_acc}')





