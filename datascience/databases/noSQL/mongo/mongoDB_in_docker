Dockerizing MongoDB and MongoDB Express

Step 1: Pull MongoDB Image and Create Network

docker pull mongo && docker network create mongo-network

Explanation:

    docker pull mongo: Downloads the official MongoDB image from Docker Hub.
    docker network create mongo-network: Creates a Docker network named mongo-network for communication between containers.

Step 2: Run MongoDB Container

docker run -d \
  --name mongodb \
  --network mongo-network \
  -e MONGO_INITDB_ROOT_USERNAME=admin \
  -e MONGO_INITDB_ROOT_PASSWORD=adminpassword \
  -p 27017:27017 \
  mongo

Explanation:

    -p 27017:27017: Maps the container's port 27017 to the host machine's port 27017.
    -d: Runs the container in detached mode.
    -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=password: Sets up the root user with the specified username and password.
    --name mongodb: Assigns the container the name "mongodb" for easy referencing.
    --network mongo-network: Connects the container to the "mongo-network" for network communication.
    mongo: Specifies the image to use, in this case, the MongoDB image.

Step 3: Check Network Creation
docker network ls

Explanation:

    Lists all Docker networks, confirming the creation of "mongo-network."

Step 4: Check MongoDB Container Logs
docker logs mongodb

Explanation:

    Verifies if the MongoDB container started successfully and checks for any initialization logs.

Step 5: Run MongoDB Express Container

docker run -d \
  --name mongo-express \
  --network mongo-network \
  -e ME_CONFIG_MONGODB_SERVER=mongodb \
  -e ME_CONFIG_MONGODB_PORT=27017 \
  -e ME_CONFIG_MONGODB_ADMINUSERNAME=admin \
  -e ME_CONFIG_MONGODB_ADMINPASSWORD=adminpassword \
  -p 8081:8081 \
  mongo-express

Explanation:

    -d: Runs the container in detached mode.
    -p 8081:8081: Maps the container's port 8081 to the host machine's port 8081.
    -e ME_CONFIG_MONGODB_ADMINUSERNAME=admin -e ME_CONFIG_MONGODB_ADMINPASSWORD=password: Sets up the MongoDB Express admin user with the specified username and password.
    --net mongo-network: Connects the container to the "mongo-network" for network communication.
    --name mongo-express: Assigns the container the name "mongo-express" for easy referencing.
    -e ME_CONFIG_MONGODB_SERVER=mongodb: Specifies the MongoDB server to connect to.

Explanation:

    Lists all Docker networks, confirming the creation of "mongo-network."

Note:
Make sure to replace <log> with the actual container ID or name when using docker logs. Additionally, ensure that MongoDB Express (mongo-express) image is available in your Docker environment.

###if the credentials i made dont work when trying to log in to localhost:8081:


docker stop mongo-express
docker rm mongo-express

##remove container and image of mongo express

##create new container:

docker run -d \
  --name mongo-express \
  --network mongo-network \
  -e ME_CONFIG_MONGODB_SERVER=mongodb \
  -e ME_CONFIG_MONGODB_PORT=27017 \
  -e ME_CONFIG_MONGODB_ADMINUSERNAME=admin \
  -e ME_CONFIG_MONGODB_ADMINPASSWORD=adminpassword \  # Correct password here
  -p 8081:8081 \
  mongo-express
  
  
  
   docker restart mongo-express
   
   



