Step 1: Update and Install Dependencies
Update your package list:

 
 
sudo apt update
Install PostgreSQL:

 
 
sudo apt install postgre  postgre -contrib
Install Barman:

 
 
sudo apt install barman
Step 2: Locate PostgreSQL Configuration Directory
Check PostgreSQL version:

 
 
p  --version
Note the version number. For this guide, let's assume it is version 14 (adjust if your version is different).
Find the PostgreSQL data directory:

 
 
sudo -u postgres p  -c 'show data_directory;'
This command will show the data directory. Let's assume it outputs /var/lib/postgre /14/main (adjust according to your actual output).
Find the PostgreSQL configuration directory:

 
 
sudo find / -name postgre .conf
This command will help you locate the postgre .conf file. Note the directory path.
Step 3: Configure PostgreSQL
Edit PostgreSQL configuration:

 
 
sudo nano /var/lib/postgre /14/main/postgre .conf
Ensure the following settings are configured:
plaintext
 
wal_level = replica
archive_mode = on
archive_command = 'rsync -a %p barman@<barman-server>:<backup-dir>/%f'
max_wal_senders = 3
wal_keep_size = 256
Edit pg_hba.conf to allow Barman to connect:

 
 
sudo nano /var/lib/postgre /14/main/pg_hba.conf
Add the following line:
plaintext
 
host    replication     barman      <barman-server-ip>/32      md5
Create a replication user for Barman:

 
 
sudo -u postgres p 
Inside the PostgreSQL shell, run:
 
 
CREATE USER barman REPLICATION LOGIN ENCRYPTED PASSWORD 'your_password';
Restart PostgreSQL:

 
 
sudo systemctl restart postgre 
Step 4: Configure Barman
Set up SSH keys for passwordless login:

 
 
s -keygen -t rsa
s -copy-id barman@<postgre -server>
Edit Barman configuration:

 
 
sudo nano /etc/barman.conf
Add the following configuration:
plaintext
 
[<database-name>]
description = "Description of your PostgreSQL database"
conninfo = host=<postgre -server> user=barman dbname=postgres
ssh_command = ssh barman@<postgre -server>
backup_method = rsync
retention_policy = RECOVERY WINDOW OF 7 DAYS
Verify Barman configuration:

 
 
sudo -u barman barman check <database-name>
Step 5: Take a Backup with Barman
Initialize a backup:

 
 
sudo -u barman barman backup <database-name>
Check backup status:

 
 
sudo -u barman barman list-backups <database-name>
Step 6: Recovery with Barman
Prepare a recovery:

 
 
sudo -u barman barman recover <database-name> <backup-id> /path/to/recovery
Configure PostgreSQL for recovery:

Edit postgre .conf to set the restore_command:
plaintext
 
restore_command = 'cp /path/to/recovery/%f %p'
Start PostgreSQL in recovery mode:

 
 
sudo systemctl start postgre 
Step 7: Regular Maintenance
Set up periodic backups using cron:

 
 
sudo crontab -e
Add a cron job for daily backups:
plaintext
 
0 2 * * * /usr/bin/barman backup <database-name>
Monitor Barman and PostgreSQL logs for any issues.

Following these adjusted steps should help you set up and configure PostgreSQL with Barman for backup and recovery on your system. Make sure to replace placeholders like <barman-server>, <postgre -server>, <backup-dir>, <database-name>, and <backup-id> with your actual server details and configurations.
