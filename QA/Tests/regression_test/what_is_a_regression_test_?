A **regression test** is a type of software testing that ensures that recent changes or updates to the codebase have not adversely affected the existing functionality of the software. The primary purpose of regression testing is to verify that new code changes (like bug fixes, enhancements, or new features) have not introduced new bugs into parts of the software that were previously working correctly.

### Key Points About Regression Testing:
- **Maintains Stability:** It helps ensure that the application remains stable after changes have been made.
- **Re-runs Existing Tests:** Regression testing often involves re-running a set of existing tests (or the entire test suite) to check for unexpected issues.
- **Automated:** Because regression testing involves repetitive execution of test cases, it is often automated using testing frameworks and tools.
- **Part of Continuous Integration:** It is a crucial part of Continuous Integration (CI) pipelines, where tests are automatically executed whenever new code is committed.

### When to Perform Regression Testing:
- **After Bug Fixes:** To ensure that fixing a bug has not caused other issues.
- **After New Features:** To ensure that adding new features does not break existing functionality.
- **After Performance Improvements:** To ensure that optimizations do not introduce new bugs.
- **During Major Code Refactoring:** To ensure that restructuring the code does not affect the software's functionality.

### Example:
Imagine you have a calculator application that allows users to perform basic arithmetic operations. If you add a new feature to calculate square roots, you would perform regression tests to ensure that the basic operations (addition, subtraction, multiplication, division) still work as expected after adding the new feature.
