Step_1:_Install_Required_Dependencies
Update_your_package_list:

 
 
sudo_apt_update
Install_pip,_the_Python_package_installer:

 
 
sudo_apt_install_ 3-pip
Install_additional_dependencies:

 
 
sudo_apt_install_libpq-dev_libssl-dev_libffi-dev
Install_virtualenv:

 
 
sudo_pip3_install_virtualenv
Step_2:_Create_a_Python_Virtual_Environment
Create_a_project_directory:

 
 
mkdir_airflow_project
cd_airflow_project
Create_a_virtual_environment:

 
 
virtualenv_venv
Activate_the_virtual_environment:

 
 
source_venv/bin/activate
Step_3:_Install_Apache_Airflow
Set_environment_variables_for_Airflow:

 
 
export_AIRFLOW_HOME=~/airflow
Install_Apache_Airflow:

 
 
pip_install_apache-airflow
Step_4:_Initialize_Airflow_Database
Initialize_the_Airflow_database:
 
 
airflow_db_init
Step_5:_Start_Airflow_Web_Server_and_Scheduler
Start_the_Airflow_web_server:

 
 
airflow_webserver_--port_8080
Open_a_new_terminal_window/tab_and_navigate_to_your_Airflow_project_directory:

 
 
cd_~/airflow_project
source_venv/bin/activate
Start_the_Airflow_scheduler:

 
 
airflow_scheduler
Step_6:_Set_Up_Airflow_Web_UI_Login_Credentials
Create_an_Airflow_user:

 
 
airflow_users_create_\
    --username_admin_\
    --firstname_FIRST_NAME_\
    --lastname_LAST_NAME_\
    --role_Admin_\
    --email_admin@example.com_\
    --password_admin_password
Replace FIRST_NAME, LAST_NAME, admin@example.com, and admin_password with your desired credentials.

Step_7:_Access_Airflow_UI
Open_your_web_browser_and_navigate_to:

plaintext
 
http://localhost:8080
Log_in_using_the_credentials_you_created_in_Step_6.

Step_8:_Create_Your_First_DAG
Create_a_directory_for_your_DAGs:

 
 
mkdir_-p_~/airflow/dags
Create_a_simple_DAG_script_(e.g.,_example_dag.py)in_the~/airflow/dags_directory:

 
 
from_airflow_import_DAG
from_airflow.operators.dummy_import_DummyOperator
from_datetime_import_datetime

default_args_=_{
    'owner':_'airflow',
    'start_date':_datetime(2024,_1,_1),
    'retries':_1,
}

dag_=_DAG('example_dag',_default_args=default_args,_schedule_interval='@daily')

start_task_=_DummyOperator(task_id='start_task',_dag=dag)
end_task_=_DummyOperator(task_id='end_task',_dag=dag)

start_task_>>_end_task
Step_9:_Test_Your_DAG
In_the_Airflow_UI,go_to_the_DAGs_tab_and_turn_on_theexample_dag_toggle.
Trigger_the_DAG_manually_by_clicking_the_"Trigger_DAG"button(a_play_button_icon)next_toexample_dag.
Step_10:_Add_More_Complex_Tasks
Install_additional_operators_as_needed:

 
 
pip_install_apache-airflow-providers-http
Modify_your_DAG_to_include_more_complex_tasks,_like_HTTP_requests,_data_processing,_etc.

Trouble ooting
If_you_encounter_any_issues,_here_are_some_common_trouble ooting_steps:

Check_for_any_errors_in_the_web_server_logs.
Ensure_that_there_are_no_firewalls_or_security_settings_blocking_port_8080.
Verify_that_the_virtual_environment_is_activated_when_starting_the_web_server.
By_following_these_steps,_you_ ould_be_able_to_successfully_set_up_and_access_the_Apache_Airflow_web_UI_on_your_Ubuntu_system_with_the_specified_login_credentials.
