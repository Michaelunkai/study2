Deploy a Vulnerable Service
We'll use a simple Flask application with a Jinja2 SSTI vulnerability for this example.

Create a Dockerfile
First, create a directory for your project and navigate to it:

 
 
mkdir ssti-demo
cd ssti-demo
Create a Dockerfile with the following content:

Dockerfile
 
FROM  :3.8-slim

WORKDIR /app

COPY requirements.txt requirements.txt
RUN pip install -r requirements.txt

COPY . .

RUN chmod +x entrypoint.sh
ENTRYPOINT ["./entrypoint. "]
Create a requirements.txt
Create a requirements.txt file with the following content:

text
 
Flask==2.0.2
Create the Flask Application
Create an app.py file with the following content:

 
 
from flask import Flask, request, render_template_string

app = Flask(__name__)

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        name = request.form['name']
        template = f"Hello {name}!"
        return render_template_string(template)
    return '''
        <form method="post">
            Name: <input type="text" name="name">
            <input type="submit">
        </form>
    '''

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
Create an Entry Point Script
Create a file named entrypoint.sh with the following content:

 
 
#!/bin/ 

# Start the Flask application
  app.py

# Keep the container running
tail -f /dev/null
Make sure the script is executable:

 
 
chmod +x entrypoint. 
