Here are **30 useful Docker Hub API commands** you can use with your **Docker Hub API key**. I've listed common tasks like retrieving repository information, tags, user details, and more.

### 1. **Get All Repositories for a User**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/?page_size=100"
```

### 2. **Get Repository Information**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/"
```

### 3. **List All Tags for a Repository**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/tags/?page_size=100"
```

### 4. **Get Details of a Specific Tag**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/tags/TAG_NAME/"
```

### 5. **Get a List of All Organizations**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/organizations/"
```

### 6. **Get Repository Details for an Organization**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/organizations/ORG_NAME/repositories/"
```

### 7. **Get Details of a Specific Organization**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/organizations/ORG_NAME/"
```

### 8. **Get Repository Pull Count**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/?include_tags=true"
```

### 9. **Get User Information**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/users/YOUR_USERNAME/"
```

### 10. **Get the List of All Teams in an Organization**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/organizations/ORG_NAME/teams/"
```

### 11. **Get Information on a Specific Team**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/organizations/ORG_NAME/teams/TEAM_NAME/"
```

### 12. **Create a New Team in an Organization**
```bash
curl -X POST -u "YOUR_USERNAME:YOUR_API_KEY" \
    -d '{"name": "new_team_name", "description": "Team description"}' \
    "https://hub.docker.com/v2/organizations/ORG_NAME/teams/"
```

### 13. **Add User to a Team**
```bash
curl -X POST -u "YOUR_USERNAME:YOUR_API_KEY" \
    -d '{"username": "USER_TO_ADD"}' \
    "https://hub.docker.com/v2/organizations/ORG_NAME/teams/TEAM_NAME/members/"
```

### 14. **List All Collaborators for a Repository**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/collaborators/"
```

### 15. **Add Collaborator to a Repository**
```bash
curl -X POST -u "YOUR_USERNAME:YOUR_API_KEY" \
    -d '{"username": "COLLABORATOR_USERNAME"}' \
    "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/collaborators/"
```

### 16. **Remove Collaborator from a Repository**
```bash
curl -X DELETE -u "YOUR_USERNAME:YOUR_API_KEY" \
    "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/collaborators/COLLABORATOR_USERNAME/"
```

### 17. **Get the List of Webhooks for a Repository**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/hooks/"
```

### 18. **Create a New Webhook for a Repository**
```bash
curl -X POST -u "YOUR_USERNAME:YOUR_API_KEY" \
    -d '{"url": "http://example.com/webhook", "events": ["push", "delete"]}' \
    "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/hooks/"
```

### 19. **Delete a Webhook**
```bash
curl -X DELETE -u "YOUR_USERNAME:YOUR_API_KEY" \
    "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/hooks/HOOK_ID/"
```

### 20. **Get Details of a User's Private Repositories**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/?page_size=100&visibility=private"
```

### 21. **Get the List of All Starred Repositories**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/users/YOUR_USERNAME/starred_repositories/"
```

### 22. **Star a Repository**
```bash
curl -X POST -u "YOUR_USERNAME:YOUR_API_KEY" \
    -d '{"repository": "REPOSITORY_NAME"}' \
    "https://hub.docker.com/v2/users/YOUR_USERNAME/starred_repositories/"
```

### 23. **Unstar a Repository**
```bash
curl -X DELETE -u "YOUR_USERNAME:YOUR_API_KEY" \
    "https://hub.docker.com/v2/users/YOUR_USERNAME/starred_repositories/REPOSITORY_NAME/"
```

### 24. **Get the List of All Organizations for a User**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/users/YOUR_USERNAME/organizations/"
```

### 25. **Get the Number of Builds for a Repository**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/builds/"
```

### 26. **Get the Details of a Specific Build**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/builds/BUILD_ID/"
```

### 27. **Get the Last Build Status**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/builds/?page_size=1" | jq -r '.results[0].status'
```

### 28. **Get the Push History for a Repository**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/pushhistory/"
```

### 29. **Get the List of Available Tags for a Specific Image (including tag details)**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/tags/TAG_NAME/details/"
```

### 30. **List the Builds for a Specific Tag**
```bash
curl -s -u "YOUR_USERNAME:YOUR_API_KEY" "https://hub.docker.com/v2/repositories/YOUR_USERNAME/REPOSITORY_NAME/tags/TAG_NAME/builds/"
```

---

### **Important Notes:**
- Replace `YOUR_USERNAME`, `YOUR_API_KEY`, `REPOSITORY_NAME`, `TAG_NAME`, `ORG_NAME`, `COLLABORATOR_USERNAME`, etc., with actual values.
- You can get the API key from your Docker Hub account under **Account Settings > Security**.

These commands will allow you to interact programmatically with Docker Hub's API, enabling automated workflows for managing repositories, tags, and builds. Let me know if you need help with specific commands or tasks!
